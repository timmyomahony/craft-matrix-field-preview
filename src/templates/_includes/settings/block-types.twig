{% import '_includes/forms' as forms %}

{% do view.registerAssetBundle('craft\\web\\assets\\admintable\\AdminTableAsset') -%}

{% do view.registerTranslations('matrix-field-preview', [
    'Block Type',
    'Configure {type} Field Previews',
    'Category',
    'Description',
    'No block types exist yet.',
    "No {type} fields have been created or enabled for previews yet. Please visit the 'Configure Fields' and enable image previews for your {type} fields.",
    'Not configured yet',
    'Preview Image',
]) %}

<div class="field mfp-settings-table">
    <div class="heading">
        <label>{{ "Configure {type} Field Previews"|t('matrix-field-preview', params = { type: type | lower }) }}</label>
        <div class="instructions"><p>{{ "Use this page to configure the image and text previews that appear for your enabled {type} fields." | t('matrix-field-preview', params = { type: type | lower }) }}</p></div>
    </div>
    {% if fields | length <= 0 %}
        <hr />
        <p class="warning with-icon">{{ "No {type} fields have been created or enabled for previews yet. Please visit the 'Configure Fields' and enable image previews for your {type} fields."|t('matrix-field-preview', params = { type: type | lower }) }}</p>
    {% else %}
        {% js %}
            var notConfiguredText = Craft.t('matrix-field-preview', 'Not configured yet');
            var columns = [
                {
                    name: '__slot:title',
                    title: Craft.t('matrix-field-preview', 'Block Type'),
                },
                {
                    name: 'description',
                    title: Craft.t('matrix-field-preview', 'Description'),
                    callback: function(value) {
                        if (value.length > 0) {
                            return '<img class="mfp-settings-table__icon" title="' + value + '" src="{{ assets.success }}">'
                        }
                        return '<img class="mfp-settings-table__icon mfp-settings-table__icon--cancel" title="' + notConfiguredText + '" src="{{ assets.cancel }}">'
                    }
                },
                {
                    name: 'category',
                    title: Craft.t('matrix-field-preview', 'Category'),
                    callback: function(value) {
                        if (value !== false) {
                            return '<img class="mfp-settings-table__icon" title="' + value + '" src="{{ assets.success }}">'
                        }
                        return '<img class="mfp-settings-table__icon mfp-settings-table__icon--cancel" title="' + notConfiguredText + '" src="{{ assets.cancel }}">'
                    }
                },
                {
                    name: 'hasPreview',
                    title: Craft.t('matrix-field-preview', 'Preview Image'),
                    callback: function(value) {
                        if (value === true) {
                            return '<img class="mfp-settings-table__icon" src="{{ assets.success }}">'
                        }
                        return '<img class="mfp-settings-table__icon mfp-settings-table__icon--cancel" title="' + notConfiguredText + '" src="{{ assets.cancel }}">'
                    }
                }
            ];
        {% endjs %}
        {% for field in fields %}
            <h4><em>{{ field.name }}</em> {{ type | capitalize ~ " Field" | t("matrix-field-preview") }}</h4>
            <div class="mfp-settings-table__table">
                <div id="matrix-field-preview-block-types-vue-admin-table-{{ field.id }}"></div>
                {% js %}
                    var type = "{{ type | lower }}";
                    new Craft.VueAdminTable({
                        columns: columns,
                        container: '#matrix-field-preview-block-types-vue-admin-table-{{ field.id }}',
                        emptyMessage: Craft.t('matrix-field-preview', 'No block types exist yet.'),
                        tableData: {{ field.tableData|json_encode|raw }},
                        reorderAction: "matrix-field-preview/" + type + "-block-types/reorder"
                    });
                {% endjs %}
            </div>
        {% endfor %}
    {% endif %}
</div>
